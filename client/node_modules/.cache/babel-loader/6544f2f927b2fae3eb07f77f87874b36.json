{"ast":null,"code":"var _jsxFileName = \"/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Movie.js\";\nimport React from \"react\"; // import API from \"../utils/API\";\n\nimport \"./Movie.css\";\nconst tmdb_url = \"https://www.themoviedb.org/movie\";\nconst api_url = \"https://api.themoviedb.org\";\nconst image_url = \"https://image.tmdb.org/t/p/w500\";\nconst api_key = process.env.REACT_APP_MOVIE_API_KEY;\nconst language = \"en-us\";\nconst genres = {\n  Action: 28,\n  Adventure: 12,\n  Animation: 16,\n  Comedy: 35,\n  Crime: 80,\n  Document: 99,\n  Drama: 18,\n  Family: 10751,\n  Fantasy: 14,\n  History: 36,\n  Horror: 27,\n  Music: 10402,\n  Mystery: 9648,\n  Romance: 10749,\n  SciFi: 878,\n  TVMovie: 10770,\n  Thriller: 53,\n  War: 10752,\n  Western: 37\n};\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDiscover = (type, genre = \"\") => {\n      this.discover(type, genre[1]);\n    };\n\n    this.updateSearch = event => {\n      if (event.length === 0) return;\n      this.search(event);\n    };\n\n    this.state = {\n      featuredMovieData: null,\n      movieData: this.discover()\n    };\n  }\n\n  discover(type = \"movie\", genre = \"\") {\n    fetch(`${api_url}/3/discover/${type}?api_key=${api_key}&language=${language}&with_genres=${genre}`).then(response => response.json()).then(data => {\n      const movieList = [];\n      const results = data.results; // Use the math.random\n\n      const random = Math.floor(Math.random() * results.length);\n      const movie = results[random];\n      const movieBox = /*#__PURE__*/React.createElement(MovieBox, {\n        movie: movie,\n        key: movie.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 26\n        }\n      });\n      movie.poster_link = `${image_url}${movie.poster_path}`;\n      movie.url = `${tmdb_url}${movie.id}`;\n      movieList.push(movieBox);\n      fetch(`${api_url}/3/${type}/${results[0].id}?api_key=${api_key}&append_to_response=credits,videos`).then(response => response.json()).then(data => {\n        this.setState({\n          featuredMovieData: data,\n          movieData: movieList\n        });\n      });\n    });\n  }\n\n  search(searchValue) {\n    fetch(`${api_url}/3/search/movie?api_key=${api_key}&language=${language}&query=${searchValue}`).then(response => response.json()).then(data => {\n      const movieList = [];\n      const results = data.results;\n      results.forEach(movie => {\n        if (movie.poster_path === null) return;\n\n        if (movie.vote_average) {\n          const movieBox = /*#__PURE__*/React.createElement(MovieBox, {\n            movie: movie,\n            key: movie.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 30\n            }\n          });\n          movie.poster_link = `${image_url}${movie.poster_path}`;\n          movie.url = `${tmdb_url}${movie.id}`;\n          movieList.push(movieBox);\n        }\n      });\n      this.setState({\n        movieData: movieList\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, this.state.movieData ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      updateSearch: this.updateSearch,\n      updateDiscover: this.updateDiscover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(GenresBar, {\n      genres: genres,\n      updateDiscover: this.updateDiscover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(MovieMain, {\n      movies: this.state.movieData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}\n\nconst Footer = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"footer-icons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://www.github.com/mikesuchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-github-square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://www.linkedin.com/in/michael-suchorolski\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fab fa-linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"mailto:mikesuchor@gmail.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-envelope-square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(TMDBLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Designed and created by Michael Suchorolski \\xA9 2019\"));\n};\n\nconst TMDBLogo = () => /*#__PURE__*/React.createElement(\"a\", {\n  href: \"https://www.themoviedb.org/\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"tmdb-logo\",\n  src: \"https://previews.dropbox.com/p/thumb/AAZ09JA0zXmOcCBoeK-_BYH3FtZA3cMgKcbg01VPkylJD91dboZ_esG7E6rMjS_dhL2q2yrIFpyb39NRTNtIzl88ac3M3HEUXN7s8bsiwW4UQ7BcSVUPueAxKIM2ybdOQJ_ZqA0ccs0EWW4f1YCR8YMepR15_e4ijR_u3RNy8ufq_gV3c0TpEH7iVgUMM-ruthAgJtTLibHkjUpyme2JN5pBTI-RZO1rDLmCau6BAhpPN2reifxVGFHfdN37o2KVk7xSJJCxhO7UlLokb622IoAcrSoLxT4Ijat6p_IU0mDpmxXlmRM5-vrScg4L6hyCTqLhXa3Bb1EnhwU89Haj_3ZteHYRypPQunzmP_ad96ooAg/p.png?size_mode=5\",\n  alt: \"tmdb logo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }\n}));\n\nconst MovieBox = props => {\n  const moveToFeatured = hello => {\n    console.log(hello);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"movie_poster\",\n    src: props.movie.poster_link,\n    alt: \"movie poster\",\n    onClick: () => moveToFeatured(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, props.movie.title ? props.movie.title : props.movie.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie_vote_average\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"star_icon fas fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), props.movie.vote_average));\n};\n\nconst MovieBoxContainer = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movie_box_container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 3\n  }\n}, props.movies);\n\nconst MovieMain = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movie_main\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }\n}, \"TRENDING MOVIES\"), /*#__PURE__*/React.createElement(MovieBoxContainer, {\n  movies: props.movies,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }\n}));\n\nconst GenreButton = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"genre_button\",\n  onClick: () => props.updateDiscover(\"movie\", props.genre),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 3\n  }\n}, props.genre[0]);\n\nconst GenresBar = props => {\n  const genresArr = [];\n\n  for (var i = 0; i < Object.keys(props.genres).length; i++) {\n    genresArr.push( /*#__PURE__*/React.createElement(GenreButton, {\n      genre: Object.entries(props.genres)[i],\n      key: `Button+${i}`,\n      updateDiscover: props.updateDiscover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"genres_bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 10\n    }\n  }, genresArr);\n};\n\nconst Navbar = props => /*#__PURE__*/React.createElement(\"nav\", {\n  className: \"navbar\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(TVMovieToggle, {\n  updateDiscover: props.updateDiscover,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Search, {\n  updateSearch: props.updateSearch,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }\n}));\n\nconst Search = props => {\n  const scrollToMovies = () => {\n    var element = document.querySelector(\".movie_main\");\n    var headerOffset = 70;\n    var elementPosition = element.offsetTop;\n    var offsetPosition = elementPosition - headerOffset;\n    document.documentElement.scrollTop = offsetPosition;\n    document.body.scrollTop = offsetPosition; // For Safari\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-field-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-field\",\n    type: \"search\",\n    name: \"search\",\n    placeholder: \"Search...\",\n    onFocus: () => scrollToMovies(),\n    onChange: event => props.updateSearch(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }));\n};\n\nclass TVMovieToggle extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toggle: false\n    };\n\n    this.slideToggle = () => {\n      this.setState({\n        toggle: !this.state.toggle\n      }, () => this.props.updateDiscover(this.state.toggle ? \"tv\" : \"movie\"));\n    };\n  }\n\n  render() {\n    const toggle = this.state.toggle;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }, \"Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle\",\n      onClick: () => this.slideToggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"toggle-button \" + (toggle ? \"movie\" : \"tv\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }, \"TV\"));\n  }\n\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Movie.js"],"names":["React","tmdb_url","api_url","image_url","api_key","process","env","REACT_APP_MOVIE_API_KEY","language","genres","Action","Adventure","Animation","Comedy","Crime","Document","Drama","Family","Fantasy","History","Horror","Music","Mystery","Romance","SciFi","TVMovie","Thriller","War","Western","Movie","Component","constructor","props","updateDiscover","type","genre","discover","updateSearch","event","length","search","state","featuredMovieData","movieData","fetch","then","response","json","data","movieList","results","random","Math","floor","movie","movieBox","id","poster_link","poster_path","url","push","setState","searchValue","forEach","vote_average","render","Footer","TMDBLogo","MovieBox","moveToFeatured","hello","console","log","title","name","MovieBoxContainer","movies","MovieMain","GenreButton","GenresBar","genresArr","i","Object","keys","entries","Navbar","Search","scrollToMovies","element","document","querySelector","headerOffset","elementPosition","offsetTop","offsetPosition","documentElement","scrollTop","body","target","value","TVMovieToggle","toggle","slideToggle"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import API from \"../utils/API\";\nimport \"./Movie.css\";\nconst tmdb_url = \"https://www.themoviedb.org/movie\";\nconst api_url = \"https://api.themoviedb.org\";\nconst image_url = \"https://image.tmdb.org/t/p/w500\";\nconst api_key = process.env.REACT_APP_MOVIE_API_KEY;\nconst language = \"en-us\";\nconst genres = {\n  Action: 28,\n  Adventure: 12,\n  Animation: 16,\n  Comedy: 35,\n  Crime: 80,\n  Document: 99,\n  Drama: 18,\n  Family: 10751,\n  Fantasy: 14,\n  History: 36,\n  Horror: 27,\n  Music: 10402,\n  Mystery: 9648,\n  Romance: 10749,\n  SciFi: 878,\n  TVMovie: 10770,\n  Thriller: 53,\n  War: 10752,\n  Western: 37\n};\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      featuredMovieData: null,\n      movieData: this.discover()\n    };\n  }\n\n  discover(type = \"movie\", genre = \"\") {\n    fetch(\n      `${api_url}/3/discover/${type}?api_key=${api_key}&language=${language}&with_genres=${genre}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        const movieList = [];\n        const results = data.results;\n        // Use the math.random\n\n        const random = Math.floor(Math.random() * results.length);\n        const movie = results[random];\n        const movieBox = <MovieBox movie={movie} key={movie.id} />;\n        movie.poster_link = `${image_url}${movie.poster_path}`;\n        movie.url = `${tmdb_url}${movie.id}`;\n        movieList.push(movieBox);\n\n       \n        fetch(\n          `${api_url}/3/${type}/${results[0].id}?api_key=${api_key}&append_to_response=credits,videos`\n        )\n          .then(response => response.json())\n          .then(data => {\n            this.setState({ featuredMovieData: data, movieData: movieList });\n          });\n      });\n  }\n\n  search(searchValue) {\n    fetch(\n      `${api_url}/3/search/movie?api_key=${api_key}&language=${language}&query=${searchValue}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        const movieList = [];\n        const results = data.results;\n        results.forEach(movie => {\n          if (movie.poster_path === null) return;\n          if (movie.vote_average) {\n            const movieBox = <MovieBox movie={movie} key={movie.id} />;\n            movie.poster_link = `${image_url}${movie.poster_path}`;\n            movie.url = `${tmdb_url}${movie.id}`;\n            movieList.push(movieBox);\n          }\n        });\n        this.setState({ movieData: movieList });\n      });\n  }\n\n  updateDiscover = (type, genre = \"\") => {\n    this.discover(type, genre[1]);\n  };\n\n  updateSearch = event => {\n    if (event.length === 0) return;\n    this.search(event);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.movieData ? (\n          <div>\n            <Navbar\n              updateSearch={this.updateSearch}\n              updateDiscover={this.updateDiscover}\n            />\n            <GenresBar genres={genres} updateDiscover={this.updateDiscover} />\n            \n            <MovieMain movies={this.state.movieData} />\n            {/* <Footer /> */}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\n\nconst Footer = props => {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer-icons\">\n        <a href=\"http://www.github.com/mikesuchor\">\n          <i className=\"fab fa-github-square\"></i>\n        </a>\n        <a href=\"http://www.linkedin.com/in/michael-suchorolski\">\n          <i className=\"fab fa-linkedin\"></i>\n        </a>\n        <a href=\"mailto:mikesuchor@gmail.com\">\n          <i className=\"fas fa-envelope-square\"></i>\n        </a>\n        <TMDBLogo />\n      </div>\n      <p>Designed and created by Michael Suchorolski &copy; 2019</p>\n    </div>\n  );\n};\n\nconst TMDBLogo = () => (\n  <a href=\"https://www.themoviedb.org/\">\n    <img\n      className=\"tmdb-logo\"\n      src=\"https://previews.dropbox.com/p/thumb/AAZ09JA0zXmOcCBoeK-_BYH3FtZA3cMgKcbg01VPkylJD91dboZ_esG7E6rMjS_dhL2q2yrIFpyb39NRTNtIzl88ac3M3HEUXN7s8bsiwW4UQ7BcSVUPueAxKIM2ybdOQJ_ZqA0ccs0EWW4f1YCR8YMepR15_e4ijR_u3RNy8ufq_gV3c0TpEH7iVgUMM-ruthAgJtTLibHkjUpyme2JN5pBTI-RZO1rDLmCau6BAhpPN2reifxVGFHfdN37o2KVk7xSJJCxhO7UlLokb622IoAcrSoLxT4Ijat6p_IU0mDpmxXlmRM5-vrScg4L6hyCTqLhXa3Bb1EnhwU89Haj_3ZteHYRypPQunzmP_ad96ooAg/p.png?size_mode=5\"\n      alt=\"tmdb logo\"\n    ></img>\n  </a>\n);\n\nconst MovieBox = props => {\n  const moveToFeatured = hello => {\n    console.log(hello);\n  };\n\n  return (\n    <div className=\"movie_box\">\n      <img\n        className=\"movie_poster\"\n        src={props.movie.poster_link}\n        alt=\"movie poster\"\n        onClick={() => moveToFeatured(props)}\n      />\n      <p className=\"movie_title\">\n        {props.movie.title ? props.movie.title : props.movie.name}\n      </p>\n      <p className=\"movie_vote_average\">\n        <i className=\"star_icon fas fa-star\"></i>\n        {props.movie.vote_average}\n      </p>\n    </div>\n  );\n};\n\nconst MovieBoxContainer = props => (\n  <div className=\"movie_box_container\">{props.movies}</div>\n);\n\nconst MovieMain = props => (\n  <div className=\"movie_main\">\n    <h2>TRENDING MOVIES</h2>\n    <MovieBoxContainer movies={props.movies} />\n  </div>\n);\n\nconst GenreButton = props => (\n  <div\n    className=\"genre_button\"\n    onClick={() => props.updateDiscover(\"movie\", props.genre)}\n  >\n    {props.genre[0]}\n  </div>\n);\n\nconst GenresBar = props => {\n  const genresArr = [];\n  for (var i = 0; i < Object.keys(props.genres).length; i++) {\n    genresArr.push(\n      <GenreButton\n        genre={Object.entries(props.genres)[i]}\n        key={`Button+${i}`}\n        updateDiscover={props.updateDiscover}\n      />\n    );\n  }\n\n  return <div className=\"genres_bar\">{genresArr}</div>;\n};\n\nconst Navbar = props => (\n  <nav className=\"navbar\">\n    <TVMovieToggle updateDiscover={props.updateDiscover} />\n    <Search updateSearch={props.updateSearch} />\n  </nav>\n);\n\nconst Search = props => {\n  const scrollToMovies = () => {\n    var element = document.querySelector(\".movie_main\");\n    var headerOffset = 70;\n    var elementPosition = element.offsetTop;\n    var offsetPosition = elementPosition - headerOffset;\n    document.documentElement.scrollTop = offsetPosition;\n    document.body.scrollTop = offsetPosition; // For Safari\n  };\n\n  return (\n    <div className=\"search-field-container\">\n      <input\n        className=\"search-field\"\n        type=\"search\"\n        name=\"search\"\n        placeholder=\"Search...\"\n        onFocus={() => scrollToMovies()}\n        onChange={event => props.updateSearch(event.target.value)}\n      />\n    </div>\n  );\n};\n\nclass TVMovieToggle extends React.Component {\n  state = {\n    toggle: false\n  };\n\n  slideToggle = () => {\n    this.setState({ toggle: !this.state.toggle }, () =>\n      this.props.updateDiscover(this.state.toggle ? \"tv\" : \"movie\")\n    );\n  };\n\n  render() {\n    const toggle = this.state.toggle;\n\n    return (\n      <div className=\"toggle-container\">\n        <p>Movies</p>\n        <div className=\"toggle\" onClick={() => this.slideToggle()}>\n          <div className={\"toggle-button \" + (toggle ? \"movie\" : \"tv\")}></div>\n        </div>\n        <p>TV</p>\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}