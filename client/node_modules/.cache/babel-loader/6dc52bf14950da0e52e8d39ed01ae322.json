{"ast":null,"code":"var _jsxFileName = \"/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Movie.js\";\nimport React from \"react\"; // import API from \"../utils/API\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport \"./Movie.css\";\nconst tmdb_url = \"https://www.themoviedb.org/movie\";\nconst api_url = \"https://api.themoviedb.org\";\nconst image_url = \"https://image.tmdb.org/t/p/w500\";\nconst api_key = process.env.REACT_APP_MOVIE_API_KEY;\nconst language = \"en-us\";\nconst genres = {\n  Action: 28,\n  Adventure: 12,\n  Animation: 16,\n  Comedy: 35,\n  Crime: 80,\n  Document: 99,\n  Drama: 18,\n  Family: 10751,\n  Fantasy: 14,\n  History: 36,\n  Horror: 27,\n  Music: 10402,\n  Mystery: 9648,\n  Romance: 10749,\n  SciFi: 878,\n  TVMovie: 10770,\n  Thriller: 53,\n  War: 10752,\n  Western: 37\n};\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDiscover = (type, genre = \"\") => {\n      this.discover(type, genre[1]);\n    };\n\n    this.updateSearch = event => {\n      if (event.length === 0) return;\n      this.search(event);\n    };\n\n    this.state = {\n      featuredMovieData: null,\n      movieData: this.discover()\n    };\n  }\n\n  discover(type = \"movie\", genre = \"\") {\n    fetch(`${api_url}/3/discover/${type}?api_key=${api_key}&language=${language}&with_genres=${genre}`).then(response => response.json()).then(data => {\n      const movieList = [];\n      const results = data.results; // Use the math.random\n\n      const random = Math.floor(Math.random() * results.length);\n      const movie = results[random];\n      const movieBox = /*#__PURE__*/React.createElement(MovieBox, {\n        movie: movie,\n        key: movie.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }\n      });\n      movie.poster_link = `${image_url}${movie.poster_path}`;\n      movie.url = `${tmdb_url}${movie.id}`;\n      movieList.push(movieBox);\n      fetch(`${api_url}/3/${type}/${results[0].id}?api_key=${api_key}&append_to_response=credits,videos`).then(response => response.json()).then(data => {\n        this.setState({\n          featuredMovieData: data,\n          movieData: movieList\n        });\n      });\n    });\n  }\n\n  search(searchValue) {\n    fetch(`${api_url}/3/search/movie?api_key=${api_key}&language=${language}&query=${searchValue}`).then(response => response.json()).then(data => {\n      const movieList = [];\n      const results = data.results;\n      results.forEach(movie => {\n        if (movie.poster_path === null) return;\n\n        if (movie.vote_average) {\n          const movieBox = /*#__PURE__*/React.createElement(MovieBox, {\n            movie: movie,\n            key: movie.id,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 30\n            }\n          });\n          movie.poster_link = `${image_url}${movie.poster_path}`;\n          movie.url = `${tmdb_url}${movie.id}`;\n          movieList.push(movieBox);\n        }\n      });\n      this.setState({\n        movieData: movieList\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, this.state.movieData ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(GenresBar, {\n      genres: genres,\n      updateDiscover: this.updateDiscover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })), \"div.\", /*#__PURE__*/React.createElement(MovieMain, {\n      movies: this.state.movieData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}\n\nconst MovieBox = props => {\n  const moveToFeatured = hello => {\n    console.log(hello);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, props.movie.title ? props.movie.title : props.movie.name), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"movie_poster\",\n    src: props.movie.poster_link,\n    alt: \"movie poster\",\n    onClick: () => moveToFeatured(props),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie_vote_average\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"star_icon fas fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }), props.movie.vote_average), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie_overview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, props.movie.overview), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movie_releaseDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, props.movie.release_date), console.log(props.movie));\n};\n\nconst MovieBoxContainer = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movie_box_container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 3\n  }\n}, props.movies);\n\nconst MovieMain = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"movie_main\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(MovieBoxContainer, {\n  movies: props.movies,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }\n}));\n\nconst GenreButton = props => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"genre_button\",\n  onClick: () => props.updateDiscover(\"movie\", props.genre),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 3\n  }\n}, props.genre[0]);\n\nconst GenresBar = props => {\n  const genresArr = [];\n\n  for (var i = 0; i < Object.keys(props.genres).length; i++) {\n    genresArr.push( /*#__PURE__*/React.createElement(GenreButton, {\n      genre: Object.entries(props.genres)[i],\n      key: `Button+${i}`,\n      updateDiscover: props.updateDiscover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"genres_bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }\n  }, genresArr);\n};\n\nexport default Movie;","map":{"version":3,"sources":["/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Movie.js"],"names":["React","tmdb_url","api_url","image_url","api_key","process","env","REACT_APP_MOVIE_API_KEY","language","genres","Action","Adventure","Animation","Comedy","Crime","Document","Drama","Family","Fantasy","History","Horror","Music","Mystery","Romance","SciFi","TVMovie","Thriller","War","Western","Movie","Component","constructor","props","updateDiscover","type","genre","discover","updateSearch","event","length","search","state","featuredMovieData","movieData","fetch","then","response","json","data","movieList","results","random","Math","floor","movie","movieBox","id","poster_link","poster_path","url","push","setState","searchValue","forEach","vote_average","render","MovieBox","moveToFeatured","hello","console","log","title","name","overview","release_date","MovieBoxContainer","movies","MovieMain","GenreButton","GenresBar","genresArr","i","Object","keys","entries"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import API from \"../utils/API\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Movie.css\";\nconst tmdb_url = \"https://www.themoviedb.org/movie\";\nconst api_url = \"https://api.themoviedb.org\";\nconst image_url = \"https://image.tmdb.org/t/p/w500\";\nconst api_key = process.env.REACT_APP_MOVIE_API_KEY;\nconst language = \"en-us\";\nconst genres = {\n  Action: 28,\n  Adventure: 12,\n  Animation: 16,\n  Comedy: 35,\n  Crime: 80,\n  Document: 99,\n  Drama: 18,\n  Family: 10751,\n  Fantasy: 14,\n  History: 36,\n  Horror: 27,\n  Music: 10402,\n  Mystery: 9648,\n  Romance: 10749,\n  SciFi: 878,\n  TVMovie: 10770,\n  Thriller: 53,\n  War: 10752,\n  Western: 37\n};\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      featuredMovieData: null,\n      movieData: this.discover()\n    };\n  }\n\n  discover(type = \"movie\", genre = \"\") {\n    fetch(\n      `${api_url}/3/discover/${type}?api_key=${api_key}&language=${language}&with_genres=${genre}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        const movieList = [];\n        const results = data.results;\n        // Use the math.random\n\n        const random = Math.floor(Math.random() * results.length);\n        const movie = results[random];\n        const movieBox = <MovieBox movie={movie} key={movie.id} />;\n        movie.poster_link = `${image_url}${movie.poster_path}`;\n        movie.url = `${tmdb_url}${movie.id}`;\n        movieList.push(movieBox);\n\n        fetch(\n          `${api_url}/3/${type}/${results[0].id}?api_key=${api_key}&append_to_response=credits,videos`\n        )\n          .then(response => response.json())\n          .then(data => {\n            this.setState({ featuredMovieData: data, movieData: movieList });\n          });\n      });\n  }\n\n  search(searchValue) {\n    fetch(\n      `${api_url}/3/search/movie?api_key=${api_key}&language=${language}&query=${searchValue}`\n    )\n      .then(response => response.json())\n      .then(data => {\n        const movieList = [];\n        const results = data.results;\n        results.forEach(movie => {\n          if (movie.poster_path === null) return;\n          if (movie.vote_average) {\n            const movieBox = <MovieBox movie={movie} key={movie.id} />;\n            movie.poster_link = `${image_url}${movie.poster_path}`;\n            movie.url = `${tmdb_url}${movie.id}`;\n            movieList.push(movieBox);\n          }\n        });\n        this.setState({ movieData: movieList });\n      });\n  }\n\n  updateDiscover = (type, genre = \"\") => {\n    this.discover(type, genre[1]);\n  };\n\n  updateSearch = event => {\n    if (event.length === 0) return;\n    this.search(event);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.movieData ? (\n          <div>\n           <div className=\"genres\">\n            <GenresBar genres={genres} updateDiscover={this.updateDiscover} />\n           </div>\n           div.\n            <MovieMain movies={this.state.movieData} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst MovieBox = props => {\n  const moveToFeatured = hello => {\n    console.log(hello);\n  };\n\n  return (\n    <div className=\"movie_box\">\n      <p className=\"movie_title\">\n        {props.movie.title ? props.movie.title : props.movie.name}\n      </p>\n      <img\n        className=\"movie_poster\"\n        src={props.movie.poster_link}\n        alt=\"movie poster\"\n        onClick={() => moveToFeatured(props)}\n      />\n\n      <p className=\"movie_vote_average\">\n        <i className=\"star_icon fas fa-star\"></i>\n        {props.movie.vote_average}\n      </p>\n      <p className=\"movie_overview\">{props.movie.overview}</p>\n      <p className=\"movie_releaseDate\">{props.movie.release_date}</p>\n      {console.log(props.movie)}\n    </div>\n  );\n};\n\n\nconst MovieBoxContainer = props => (\n  <div className=\"movie_box_container\">{props.movies}</div>\n);\n\nconst MovieMain = props => (\n  <div className=\"movie_main\">\n    <MovieBoxContainer movies={props.movies} />\n  </div>\n);\n\nconst GenreButton = props => (\n  <div\n    className=\"genre_button\"\n    onClick={() => props.updateDiscover(\"movie\", props.genre)}\n  >\n    {props.genre[0]}\n  </div>\n);\n\nconst GenresBar = props => {\n  const genresArr = [];\n  for (var i = 0; i < Object.keys(props.genres).length; i++) {\n    genresArr.push(\n      <GenreButton\n        genre={Object.entries(props.genres)[i]}\n        key={`Button+${i}`}\n        updateDiscover={props.updateDiscover}\n      />\n    );\n  }\n\n  return <div className=\"genres_bar\">{genresArr}</div>;\n};\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}