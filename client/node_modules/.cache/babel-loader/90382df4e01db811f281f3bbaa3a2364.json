{"ast":null,"code":"var _jsxFileName = \"/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Signup.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Card, CardTitle, CardSubtitle, CardBody, Alert, Spinner } from \"reactstrap\";\nimport { connect } from \"react-redux\"; // API to connect component state to redux store\n\nimport PropTypes from \"prop-types\";\nimport { buttonClicked, isLoading } from \"../actions/uiActions\";\nimport { Link } from \"react-router-dom\";\nimport { register } from \"../actions/authActions\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      msg: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        name,\n        email,\n        password\n      } = this.state;\n      const user = {\n        name,\n        email,\n        password\n      };\n      this.props.isLoading();\n      this.props.register(user);\n    };\n  }\n\n  // Removes sign in and register buttons from homepage\n  // upon mounting of Register component\n  componentDidMount() {\n    this.props.buttonClicked();\n  }\n\n  componentDidUpdate(prevProps) {\n    const status = this.props.status; // Changes status message if it is different from previous message\n\n    if (status !== prevProps.status) {\n      if (status.id === \"REGISTER_FAIL\") {\n        this.setState({\n          msg: status.statusMsg\n        });\n      } else {\n        this.setState({\n          msg: this.props.status.statusMsg\n        });\n      }\n    } // Redirects to Log In screen after a delay of 2secs if successfully registered\n\n\n    if (status.id === \"REGISTER_SUCCESS\") {\n      setTimeout(() => {\n        this.props.history.push(\"/login\");\n      }, 2000);\n    }\n  } // Sets the value of the input fields to the state items of the same name\n\n\n  render() {\n    let className = \"divStyle\"; // If HTTP 400 error, render alert with red color, else if\n    // it is 200 OK, render alert in green\n\n    let alert;\n\n    if (this.state.msg && this.props.status.respCode >= 400) {\n      alert = /*#__PURE__*/React.createElement(Alert, {\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }, this.state.msg);\n    } else if (this.state.msg && this.props.status.respCode === 200) {\n      alert = /*#__PURE__*/React.createElement(Alert, {\n        color: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, this.state.msg, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }\n      }), \" Redirecting to Log In screen\");\n    }\n\n    if (!this.props.button) {\n      className = \"formStyle\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, \"Register\"))), /*#__PURE__*/React.createElement(CardSubtitle, {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Already have an account?\", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, \" Log In. \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), alert, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Enter your name\",\n      className: \"mb-3\",\n      size: \"lg\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"E-mail\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"you@youremail.com\",\n      className: \"mb-3\",\n      size: \"lg\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Enter your Password\",\n      className: \"mb-3\",\n      size: \"lg\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"dark\",\n      className: \"mt-5\",\n      size: \"lg\",\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, \"Registering.. \", /*#__PURE__*/React.createElement(Spinner, {\n      size: \"sm\",\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    })) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")))))));\n  }\n\n}\n\nSignup.propTypes = {\n  buttonClicked: PropTypes.func.isRequired,\n  button: PropTypes.bool,\n  register: PropTypes.func.isRequired,\n  status: PropTypes.object.isRequired,\n  loading: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  //Maps state to redux store as props\n  button: state.ui.button,\n  status: state.status,\n  loading: state.ui.loading\n});\n\nexport default connect(mapStateToProps, {\n  register,\n  isLoading,\n  buttonClicked\n})(Signup);","map":{"version":3,"sources":["/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Signup.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Card","CardTitle","CardSubtitle","CardBody","Alert","Spinner","connect","PropTypes","buttonClicked","isLoading","Link","register","Signup","state","name","email","password","msg","onChange","e","setState","target","value","onSubmit","preventDefault","user","props","componentDidMount","componentDidUpdate","prevProps","status","id","statusMsg","setTimeout","history","push","render","className","alert","respCode","button","loading","propTypes","func","isRequired","bool","object","mapStateToProps","ui"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,KAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,SAPF,EAQEC,YARF,EASEC,QATF,EAUEC,KAVF,EAWEC,OAXF,QAYO,YAZP;AAaA,SAASC,OAAT,QAAwB,aAAxB,C,CAAuC;;AACvC,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,EAAwBC,SAAxB,QAAyC,sBAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAEA,MAAMC,MAAN,SAAqBlB,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BmB,KAD6B,GACrB;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,GAAG,EAAE;AAJC,KADqB;;AAAA,SA2C7BC,QA3C6B,GA2ClBC,CAAC,IAAI;AACd,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASP,IAAV,GAAiBK,CAAC,CAACE,MAAF,CAASC;AAA5B,OAAd;AACD,KA7C4B;;AAAA,SAgD7BC,QAhD6B,GAgDlBJ,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACK,cAAF;AAEA,YAAM;AAAEV,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,UAA4B,KAAKH,KAAvC;AAEA,YAAMY,IAAI,GAAG;AAAEX,QAAAA,IAAF;AAAQC,QAAAA,KAAR;AAAeC,QAAAA;AAAf,OAAb;AACA,WAAKU,KAAL,CAAWjB,SAAX;AACA,WAAKiB,KAAL,CAAWf,QAAX,CAAoBc,IAApB;AACD,KAxD4B;AAAA;;AAgB7B;AACA;AACAE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,KAAL,CAAWlB,aAAX;AACD;;AAEDoB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAMC,MAAM,GAAG,KAAKJ,KAAL,CAAWI,MAA1B,CAD4B,CAG5B;;AACA,QAAIA,MAAM,KAAKD,SAAS,CAACC,MAAzB,EAAiC;AAC/B,UAAIA,MAAM,CAACC,EAAP,KAAc,eAAlB,EAAmC;AACjC,aAAKX,QAAL,CAAc;AAAEH,UAAAA,GAAG,EAAEa,MAAM,CAACE;AAAd,SAAd;AACD,OAFD,MAEO;AACL,aAAKZ,QAAL,CAAc;AAAEH,UAAAA,GAAG,EAAE,KAAKS,KAAL,CAAWI,MAAX,CAAkBE;AAAzB,SAAd;AACD;AACF,KAV2B,CAY5B;;;AACA,QAAIF,MAAM,CAACC,EAAP,KAAc,kBAAlB,EAAsC;AACpCE,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKP,KAAL,CAAWQ,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAxC4B,CA0C7B;;;AAgBAC,EAAAA,MAAM,GAAG;AACP,QAAIC,SAAS,GAAG,UAAhB,CADO,CAGP;AACA;;AACA,QAAIC,KAAJ;;AACA,QAAI,KAAKzB,KAAL,CAAWI,GAAX,IAAkB,KAAKS,KAAL,CAAWI,MAAX,CAAkBS,QAAlB,IAA8B,GAApD,EAAyD;AACvDD,MAAAA,KAAK,gBAAG,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,KAAKzB,KAAL,CAAWI,GAAlC,CAAR;AACD,KAFD,MAEO,IAAI,KAAKJ,KAAL,CAAWI,GAAX,IAAkB,KAAKS,KAAL,CAAWI,MAAX,CAAkBS,QAAlB,KAA+B,GAArD,EAA0D;AAC/DD,MAAAA,KAAK,gBACH,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKzB,KAAL,CAAWI,GADd,oBACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADnB,kCADF;AAKD;;AAED,QAAI,CAAC,KAAKS,KAAL,CAAWc,MAAhB,EAAwB;AACtBH,MAAAA,SAAS,GAAG,WAAZ;AACD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAEA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF,eAME,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CANF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWGC,KAXH,eAYE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKf,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,WAAW,EAAC,iBAJd;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,IAAI,EAAC,IANP;AAOE,MAAA,QAAQ,EAAE,KAAKL,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAYE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,WAAW,EAAC,mBAJd;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,IAAI,EAAC,IANP;AAOE,MAAA,QAAQ,EAAE,KAAKA,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAuBE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF,eAwBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,WAAW,EAAC,qBAJd;AAKE,MAAA,SAAS,EAAC,MALZ;AAME,MAAA,IAAI,EAAC,IANP;AAOE,MAAA,QAAQ,EAAE,KAAKA,QAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,eAiCE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,SAAS,EAAC,MAA/B;AAAsC,MAAA,IAAI,EAAC,IAA3C;AAAgD,MAAA,KAAK,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKQ,KAAL,CAAWe,OAAX,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACgB,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC,IAAd;AAAmB,MAAA,KAAK,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,CADD,gBAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CAjCF,CADF,CAZF,CADF,CADF,CADF;AAgED;;AA7I4B;;AAAzB7B,M,CAQG8B,S,GAAY;AACjBlC,EAAAA,aAAa,EAAED,SAAS,CAACoC,IAAV,CAAeC,UADb;AAEjBJ,EAAAA,MAAM,EAAEjC,SAAS,CAACsC,IAFD;AAGjBlC,EAAAA,QAAQ,EAAEJ,SAAS,CAACoC,IAAV,CAAeC,UAHR;AAIjBd,EAAAA,MAAM,EAAEvB,SAAS,CAACuC,MAAV,CAAiBF,UAJR;AAKjBH,EAAAA,OAAO,EAAElC,SAAS,CAACsC;AALF,C;;AAwIrB,MAAME,eAAe,GAAGlC,KAAK,KAAK;AAChC;AACA2B,EAAAA,MAAM,EAAE3B,KAAK,CAACmC,EAAN,CAASR,MAFe;AAGhCV,EAAAA,MAAM,EAAEjB,KAAK,CAACiB,MAHkB;AAIhCW,EAAAA,OAAO,EAAE5B,KAAK,CAACmC,EAAN,CAASP;AAJc,CAAL,CAA7B;;AAOA,eAAenC,OAAO,CAACyC,eAAD,EAAkB;AAAEpC,EAAAA,QAAF;AAAYF,EAAAA,SAAZ;AAAuBD,EAAAA;AAAvB,CAAlB,CAAP,CACbI,MADa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Card,\n  CardTitle,\n  CardSubtitle,\n  CardBody,\n  Alert,\n  Spinner\n} from \"reactstrap\";\nimport { connect } from \"react-redux\"; // API to connect component state to redux store\nimport PropTypes from \"prop-types\";\nimport { buttonClicked, isLoading } from \"../actions/uiActions\";\nimport { Link } from \"react-router-dom\";\nimport { register } from \"../actions/authActions\";\n\nclass Signup extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    msg: \"\"\n  };\n\n  static propTypes = {\n    buttonClicked: PropTypes.func.isRequired,\n    button: PropTypes.bool,\n    register: PropTypes.func.isRequired,\n    status: PropTypes.object.isRequired,\n    loading: PropTypes.bool\n  };\n\n  // Removes sign in and register buttons from homepage\n  // upon mounting of Register component\n  componentDidMount() {\n    this.props.buttonClicked();\n  }\n\n  componentDidUpdate(prevProps) {\n    const status = this.props.status;\n\n    // Changes status message if it is different from previous message\n    if (status !== prevProps.status) {\n      if (status.id === \"REGISTER_FAIL\") {\n        this.setState({ msg: status.statusMsg });\n      } else {\n        this.setState({ msg: this.props.status.statusMsg });\n      }\n    }\n\n    // Redirects to Log In screen after a delay of 2secs if successfully registered\n    if (status.id === \"REGISTER_SUCCESS\") {\n      setTimeout(() => {\n        this.props.history.push(\"/login\");\n      }, 2000);\n    }\n  }\n\n  // Sets the value of the input fields to the state items of the same name\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  // Calls action to register user\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    const user = { name, email, password };\n    this.props.isLoading();\n    this.props.register(user);\n  };\n\n  render() {\n    let className = \"divStyle\";\n\n    // If HTTP 400 error, render alert with red color, else if\n    // it is 200 OK, render alert in green\n    let alert;\n    if (this.state.msg && this.props.status.respCode >= 400) {\n      alert = <Alert color=\"danger\">{this.state.msg}</Alert>;\n    } else if (this.state.msg && this.props.status.respCode === 200) {\n      alert = (\n        <Alert color=\"success\">\n          {this.state.msg} <br /> Redirecting to Log In screen\n        </Alert>\n      );\n    }\n\n    if (!this.props.button) {\n      className = \"formStyle\";\n    }\n    return (\n      <div className={className}>\n        <Card>\n          <CardBody>\n            <CardTitle>\n              <h2>\n                <strong>Register</strong>\n              </h2>\n            </CardTitle>\n            <CardSubtitle className=\"text-muted\">\n              Already have an account?\n              <Link to=\"/login\"> Log In. </Link>\n            </CardSubtitle>\n            <br />\n            {alert}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup className=\"text-center\">\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  className=\"mb-3\"\n                  size=\"lg\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"email\">E-mail</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"you@youremail.com\"\n                  className=\"mb-3\"\n                  size=\"lg\"\n                  onChange={this.onChange}\n                />\n\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Enter your Password\"\n                  className=\"mb-3\"\n                  size=\"lg\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" className=\"mt-5\" size=\"lg\" block>\n                  {this.props.loading ? (\n                    <span>\n                      Registering.. <Spinner size=\"sm\" color=\"light\" />\n                    </span>\n                  ) : (\n                    <span>Sign Up</span>\n                  )}\n                </Button>\n              </FormGroup>\n            </Form>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  //Maps state to redux store as props\n  button: state.ui.button,\n  status: state.status,\n  loading: state.ui.loading\n});\n\nexport default connect(mapStateToProps, { register, isLoading, buttonClicked })(\n  Signup\n);\n"]},"metadata":{},"sourceType":"module"}