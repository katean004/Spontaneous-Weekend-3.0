{"ast":null,"code":"import axios from \"axios\";\nimport { returnStatus } from \"./statusActions\";\nimport { LOGIN_SUCCESS, LOGIN_FAIL // REGISTER_SUCCESS,\n, REGISTER_FAIL, AUTH_SUCCESS, AUTH_FAIL, LOGOUT_SUCCESS, IS_LOADING } from \"./types\"; //Uncomment below for local testing\n// axios.defaults.baseURL = \"http://localhost:5000\";\n//uncomment and set url to your own for prod\n//axios.defaults.baseURL = \"https://demos.shawndsilva.com/sessions-auth-app\"\n//Check if user is already logged in\n\nexport const isAuth = () => dispatch => {\n  axios.get(\"/api/users/authchecker\", {\n    withCredentials: true\n  }).then(res => dispatch({\n    type: AUTH_SUCCESS,\n    payload: res.data\n  })).catch(err => {\n    dispatch({\n      type: AUTH_FAIL\n    });\n  });\n}; //Register New User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => dispatch => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // Request body\n\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n  axios.post(\"/api/users/register\", body, headers).then(res => {\n    dispatch(returnStatus(res.data, res.status, \"REGISTER_SUCCESS\"));\n    dispatch({\n      type: IS_LOADING\n    });\n  }).catch(err => {\n    dispatch(returnStatus(err.response.data, err.response.status, \"REGISTER_FAIL\"));\n    dispatch({\n      type: REGISTER_FAIL\n    });\n    dispatch({\n      type: IS_LOADING\n    });\n  });\n}; //Login User\n\nexport const login = ({\n  email,\n  password\n}) => dispatch => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // Request body\n\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  axios.post(\"/api/users/login\", body, headers).then(res => {\n    console.log(res);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch({\n      type: IS_LOADING\n    });\n  }).catch(err => {\n    dispatch(returnStatus(err.response.data, err.response.status, \"LOGIN_FAIL\"));\n    dispatch({\n      type: LOGIN_FAIL\n    });\n    dispatch({\n      type: IS_LOADING\n    });\n  });\n}; //Logout User and Destroy session\n\nexport const logout = () => dispatch => {\n  axios.delete(\"/api/users/logout\", {\n    withCredentials: true\n  }).then(res => dispatch({\n    type: LOGOUT_SUCCESS\n  })).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/actions/authActions.js"],"names":["axios","returnStatus","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_FAIL","AUTH_SUCCESS","AUTH_FAIL","LOGOUT_SUCCESS","IS_LOADING","isAuth","dispatch","get","withCredentials","then","res","type","payload","data","catch","err","register","name","email","password","headers","body","JSON","stringify","post","status","response","login","console","log","logout","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,SACEC,aADF,EAEEC,UAFF,CAIE;AAJF,EAKEC,aALF,EAMEC,YANF,EAOEC,SAPF,EAQEC,cARF,EASEC,UATF,QAUO,SAVP,C,CAYA;AACA;AAEA;AACA;AAEA;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAMC,QAAQ,IAAI;AACtCV,EAAAA,KAAK,CACFW,GADH,CACO,wBADP,EACiC;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GADjC,EAEGC,IAFH,CAEQC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAEV,YADC;AAEPW,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,GAAD,CAHZ,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GAZH;AAaD,CAdM,C,CAgBP;;AACA,OAAO,MAAMc,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+Bb,QAAQ,IAAI;AACjE;AACA,QAAMc,OAAO,GAAG;AACdA,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADK,GAAhB,CAFiE,CAQjE;;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;AAEAvB,EAAAA,KAAK,CACF4B,IADH,CACQ,qBADR,EAC+BH,IAD/B,EACqCD,OADrC,EAEGX,IAFH,CAEQC,GAAG,IAAI;AACXJ,IAAAA,QAAQ,CAACT,YAAY,CAACa,GAAG,CAACG,IAAL,EAAWH,GAAG,CAACe,MAAf,EAAuB,kBAAvB,CAAb,CAAR;AACAnB,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD,GALH,EAMGU,KANH,CAMSC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CACNT,YAAY,CAACkB,GAAG,CAACW,QAAJ,CAAab,IAAd,EAAoBE,GAAG,CAACW,QAAJ,CAAaD,MAAjC,EAAyC,eAAzC,CADN,CAAR;AAGAnB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGAM,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD,GAdH;AAeD,CA1BM,C,CA4BP;;AACA,OAAO,MAAMuB,KAAK,GAAG,CAAC;AAAET,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyBb,QAAQ,IAAI;AACxD;AACA,QAAMc,OAAO,GAAG;AACdA,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADK,GAAhB,CAFwD,CAQxD;;AACA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEL,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;AAEAvB,EAAAA,KAAK,CACF4B,IADH,CACQ,kBADR,EAC4BH,IAD5B,EACkCD,OADlC,EAEGX,IAFH,CAEQC,GAAG,IAAI;AACXkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AACAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEb,aADC;AAEPc,MAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,KAAD,CAAR;AAIAP,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD,GATH,EAUGU,KAVH,CAUSC,GAAG,IAAI;AACZT,IAAAA,QAAQ,CACNT,YAAY,CAACkB,GAAG,CAACW,QAAJ,CAAab,IAAd,EAAoBE,GAAG,CAACW,QAAJ,CAAaD,MAAjC,EAAyC,YAAzC,CADN,CAAR;AAGAnB,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGAO,IAAAA,QAAQ,CAAC;AAAEK,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;AACD,GAlBH;AAmBD,CA9BM,C,CAgCP;;AACA,OAAO,MAAM0B,MAAM,GAAG,MAAMxB,QAAQ,IAAI;AACtCV,EAAAA,KAAK,CACFmC,MADH,CACU,mBADV,EAC+B;AAAEvB,IAAAA,eAAe,EAAE;AAAnB,GAD/B,EAEGC,IAFH,CAEQC,GAAG,IACPJ,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAER;AADC,GAAD,CAHZ,EAOGW,KAPH,CAOSC,GAAG,IAAI;AACZa,IAAAA,OAAO,CAACC,GAAR,CAAYd,GAAZ;AACD,GATH;AAUD,CAXM","sourcesContent":["import axios from \"axios\";\nimport { returnStatus } from \"./statusActions\";\n\nimport {\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  \n  // REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  AUTH_SUCCESS,\n  AUTH_FAIL,\n  LOGOUT_SUCCESS,\n  IS_LOADING\n} from \"./types\";\n\n//Uncomment below for local testing\n// axios.defaults.baseURL = \"http://localhost:5000\";\n\n//uncomment and set url to your own for prod\n//axios.defaults.baseURL = \"https://demos.shawndsilva.com/sessions-auth-app\"\n\n//Check if user is already logged in\nexport const isAuth = () => dispatch => {\n  axios\n    .get(\"/api/users/authchecker\", { withCredentials: true })\n    .then(res =>\n      dispatch({\n        type: AUTH_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch({\n        type: AUTH_FAIL\n      });\n    });\n};\n\n//Register New User\nexport const register = ({ name, email, password }) => dispatch => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post(\"/api/users/register\", body, headers)\n    .then(res => {\n      dispatch(returnStatus(res.data, res.status, \"REGISTER_SUCCESS\"));\n      dispatch({ type: IS_LOADING });\n    })\n    .catch(err => {\n      dispatch(\n        returnStatus(err.response.data, err.response.status, \"REGISTER_FAIL\")\n      );\n      dispatch({\n        type: REGISTER_FAIL\n      });\n      dispatch({ type: IS_LOADING });\n    });\n};\n\n//Login User\nexport const login = ({ email, password }) => dispatch => {\n  // Headers\n  const headers = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post(\"/api/users/login\", body, headers)\n    .then(res => {\n      console.log(res);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      dispatch({ type: IS_LOADING });\n    })\n    .catch(err => {\n      dispatch(\n        returnStatus(err.response.data, err.response.status, \"LOGIN_FAIL\")\n      );\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch({ type: IS_LOADING });\n    });\n};\n\n//Logout User and Destroy session\nexport const logout = () => dispatch => {\n  axios\n    .delete(\"/api/users/logout\", { withCredentials: true })\n    .then(res =>\n      dispatch({\n        type: LOGOUT_SUCCESS\n      })\n    )\n    .catch(err => {\n      console.log(err);\n    });\n};\n"]},"metadata":{},"sourceType":"module"}