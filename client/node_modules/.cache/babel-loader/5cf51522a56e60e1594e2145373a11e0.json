{"ast":null,"code":"var _jsxFileName = \"/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Movie.js\";\nimport React, { useState } from \"react\";\nimport API from \"../utils/API\";\n\nfunction Movie() {\n  const tmdb_url = 'https://www.themoviedb.org/movie';\n  const api_url = 'https://api.themoviedb.org';\n  const image_url = 'https://image.tmdb.org/t/p/w500';\n\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.updateDiscover = (type, genre = \"\") => {\n        this.discover(type, genre[1]);\n      };\n\n      this.updateSearch = event => {\n        if (event.length === 0) return;\n        this.search(event);\n      };\n\n      this.state = {\n        featuredMovieData: null,\n        movieData: this.discover()\n      };\n    }\n\n    discover(type = \"movie\", genre = \"\") {\n      fetch(`${api_url}/3/discover/${type}?api_key=${api_key}&language=${language}&with_genres=${genre}`).then(response => response.json()).then(data => {\n        const movieList = [];\n        const results = data.results;\n        results.forEach(movie => {\n          if (movie.poster_path === null) return;\n\n          if (movie.vote_average) {\n            const movieBox = /*#__PURE__*/React.createElement(MovieBox, {\n              movie: movie,\n              key: movie.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 30\n              }\n            });\n            movie.poster_link = `${image_url}${movie.poster_path}`;\n            movie.url = `${tmdb_url}${movie.id}`;\n            movieList.push(movieBox);\n          }\n        });\n        fetch(`${api_url}/3/${type}/${results[0].id}?api_key=${api_key}&append_to_response=credits,videos`).then(response => response.json()).then(data => {\n          this.setState({\n            featuredMovieData: data,\n            movieData: movieList\n          });\n        });\n      });\n    }\n\n    search(searchValue) {\n      fetch(`${api_url}/3/search/movie?api_key=${api_key}&language=${language}&query=${searchValue}`).then(response => response.json()).then(data => {\n        const movieList = [];\n        const results = data.results;\n        results.forEach(movie => {\n          if (movie.poster_path === null) return;\n\n          if (movie.vote_average) {\n            const movieBox = /*#__PURE__*/React.createElement(MovieBox, {\n              movie: movie,\n              key: movie.id,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 30\n              }\n            });\n            movie.poster_link = `${image_url}${movie.poster_path}`;\n            movie.url = `${tmdb_url}${movie.id}`;\n            movieList.push(movieBox);\n          }\n        });\n        this.setState({\n          movieData: movieList\n        });\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, this.state.movieData ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        updateSearch: this.updateSearch,\n        updateDiscover: this.updateDiscover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(GenresBar, {\n        genres: genres,\n        updateDiscover: this.updateDiscover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FeaturedMovie, {\n        movie: this.state.featuredMovieData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(MovieMain, {\n        movies: this.state.movieData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      })) : null);\n    }\n\n  }\n\n  const FeaturedMovie = props => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"featured_movie_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FeaturedMoviePoster, {\n    poster: props.movie.poster_path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FeaturedMovieInfo, {\n    movie: props.movie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }));\n\n  const FeaturedMovieInfo = props => {\n    const trailer_path = `https://www.youtube.com/embed/${props.movie.videos.results[0].key}`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"featured_movie_info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"movie_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, props.movie.title ? props.movie.title.toUpperCase() : props.movie.name.toUpperCase()), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"movie_tagline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, props.movie.tagline), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"movie_overview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, props.movie.overview), /*#__PURE__*/React.createElement(FeaturedMovieRating, {\n      movie_average: props.movie.vote_average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FeaturedMovieTrailer, {\n      trailer_path: trailer_path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }));\n  };\n\n  const FeaturedMoviePoster = props => {\n    const poster_path = `https://image.tmdb.org/t/p/w500/${props.poster}`;\n    const style = {\n      backgroundImage: \"url(\" + poster_path + \")\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"featured_movie_poster\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    });\n  };\n\n  const FeaturedMovieRating = props => {\n    const stars = [];\n\n    for (let i = 0; i < 10; i++) {\n      if (i < props.movie_average && props.movie_average - i < 1 && props.movie_average - i > 0) {\n        stars.push( /*#__PURE__*/React.createElement(\"i\", {\n          className: \"star fas fa-star-half-alt\",\n          key: `star${i}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 26\n          }\n        }));\n      } else if (i < props.movie_average && props.movie_average - i > 0) {\n        stars.push( /*#__PURE__*/React.createElement(\"i\", {\n          className: \"star fas fa-star\",\n          key: `star${i}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 26\n          }\n        }));\n      } else {\n        stars.push( /*#__PURE__*/React.createElement(\"i\", {\n          className: \"star far fa-star\",\n          key: `star${i}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 26\n          }\n        }));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"featured_movie_rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"stars\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, stars, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"movie_average\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, props.movie_average)));\n  };\n\n  const FeaturedMovieTrailer = props => /*#__PURE__*/React.createElement(\"iframe\", {\n    title: \"Trailer\",\n    width: \"100%\",\n    height: \"100%\",\n    src: props.trailer_path,\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  });\n\n  const Footer = props => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://www.github.com/mikesuchor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fab fa-github-square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://www.linkedin.com/in/michael-suchorolski\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fab fa-linkedin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"mailto:mikesuchor@gmail.com\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-envelope-square\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(TMDBLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, \"Designed and created by Michael Suchorolski \\xA9 2019\"));\n  };\n\n  const TMDBLogo = () => /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://www.themoviedb.org/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"tmdb-logo\",\n    src: \"https://previews.dropbox.com/p/thumb/AAZ09JA0zXmOcCBoeK-_BYH3FtZA3cMgKcbg01VPkylJD91dboZ_esG7E6rMjS_dhL2q2yrIFpyb39NRTNtIzl88ac3M3HEUXN7s8bsiwW4UQ7BcSVUPueAxKIM2ybdOQJ_ZqA0ccs0EWW4f1YCR8YMepR15_e4ijR_u3RNy8ufq_gV3c0TpEH7iVgUMM-ruthAgJtTLibHkjUpyme2JN5pBTI-RZO1rDLmCau6BAhpPN2reifxVGFHfdN37o2KVk7xSJJCxhO7UlLokb622IoAcrSoLxT4Ijat6p_IU0mDpmxXlmRM5-vrScg4L6hyCTqLhXa3Bb1EnhwU89Haj_3ZteHYRypPQunzmP_ad96ooAg/p.png?size_mode=5\",\n    alt: \"tmdb logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 43\n    }\n  }));\n\n  const MovieBox = props => {\n    const moveToFeatured = hello => {\n      console.log(hello);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"movie_poster\",\n      src: props.movie.poster_link,\n      alt: \"movie poster\",\n      onClick: () => moveToFeatured(props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"movie_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, props.movie.title ? props.movie.title : props.movie.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"movie_vote_average\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"star_icon fas fa-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 43\n      }\n    }), props.movie.vote_average));\n  };\n\n  const MovieBoxContainer = props => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_box_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, props.movies);\n\n  const MovieMain = props => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie_main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \"TRENDING MOVIES\"), /*#__PURE__*/React.createElement(MovieBoxContainer, {\n    movies: props.movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }));\n\n  const GenreButton = props => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"genre_button\",\n    onClick: () => props.updateDiscover(\"movie\", props.genre),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, props.genre[0]);\n\n  const GenresBar = props => {\n    const genresArr = [];\n\n    for (var i = 0; i < Object.keys(props.genres).length; i++) {\n      genresArr.push( /*#__PURE__*/React.createElement(GenreButton, {\n        genre: Object.entries(props.genres)[i],\n        key: `Button+${i}`,\n        updateDiscover: props.updateDiscover,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 22\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"genres_bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, genresArr);\n  };\n\n  const Navbar = props => /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TVMovieToggle, {\n    updateDiscover: props.updateDiscover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    updateSearch: props.updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }));\n\n  const Search = props => {\n    const scrollToMovies = () => {\n      var element = document.querySelector(\".movie_main\");\n      var headerOffset = 70;\n      var elementPosition = element.offsetTop;\n      var offsetPosition = elementPosition - headerOffset;\n      document.documentElement.scrollTop = offsetPosition;\n      document.body.scrollTop = offsetPosition; // For Safari\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-field-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search-field\",\n      type: \"search\",\n      name: \"search\",\n      placeholder: \"Search...\",\n      onFocus: () => scrollToMovies(),\n      onChange: event => props.updateSearch(event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  class TVMovieToggle extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        toggle: false\n      };\n\n      this.slideToggle = () => {\n        this.setState({\n          toggle: !this.state.toggle\n        }, () => this.props.updateDiscover(this.state.toggle ? \"tv\" : \"movie\"));\n      };\n    }\n\n    render() {\n      const toggle = this.state.toggle;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 19\n        }\n      }, \"Movies\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle\",\n        onClick: () => this.slideToggle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle-button \" + (toggle ? 'movie' : 'tv'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 19\n        }\n      }, \"TV\"));\n    }\n\n  }\n}\n\nexport default Movie;","map":{"version":3,"sources":["/Users/cyrusjose/Library/Mobile Documents/com~apple~CloudDocs/Programming/FullStack/spontaneous-weekend-3/spontaneous-weekend-v3/client/src/pages/Movie.js"],"names":["React","useState","API","Movie","tmdb_url","api_url","image_url","App","Component","constructor","props","updateDiscover","type","genre","discover","updateSearch","event","length","search","state","featuredMovieData","movieData","fetch","api_key","language","then","response","json","data","movieList","results","forEach","movie","poster_path","vote_average","movieBox","id","poster_link","url","push","setState","searchValue","render","genres","FeaturedMovie","FeaturedMovieInfo","trailer_path","videos","key","title","toUpperCase","name","tagline","overview","FeaturedMoviePoster","poster","style","backgroundImage","FeaturedMovieRating","stars","i","movie_average","FeaturedMovieTrailer","Footer","TMDBLogo","MovieBox","moveToFeatured","hello","console","log","MovieBoxContainer","movies","MovieMain","GenreButton","GenresBar","genresArr","Object","keys","entries","Navbar","Search","scrollToMovies","element","document","querySelector","headerOffset","elementPosition","offsetTop","offsetPosition","documentElement","scrollTop","body","target","value","TVMovieToggle","toggle","slideToggle"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport API from \"../utils/API\";\nfunction Movie() {\n\n  const tmdb_url = 'https://www.themoviedb.org/movie'\nconst api_url = 'https://api.themoviedb.org'\nconst image_url = 'https://image.tmdb.org/t/p/w500'\n  class App extends React.Component {\n    constructor(props) {\n      super(props)\n  \n      this.state = {\n        featuredMovieData: null,\n        movieData: this.discover()\n      }\n    }\t\n  \n      discover(type=\"movie\", genre=\"\") {\n        fetch(`${api_url}/3/discover/${type}?api_key=${api_key}&language=${language}&with_genres=${genre}`)\n        .then(response => response.json())\n        .then(data => {\n        const movieList = []\n            const results = data.results\n            results.forEach((movie) => {\n          if(movie.poster_path === null) return\n          if(movie.vote_average) {\n            const movieBox = <MovieBox movie={movie} key={movie.id} />\n            movie.poster_link = `${image_url}${movie.poster_path}`\n            movie.url = `${tmdb_url}${movie.id}`\n            movieList.push(movieBox)\n          }\n          })\n        fetch(`${api_url}/3/${type}/${results[0].id}?api_key=${api_key}&append_to_response=credits,videos`)\n        .then(response => response.json())\n        .then(data => {\n          this.setState({ featuredMovieData: data, movieData: movieList })\n        })\n        })\n      }\n  \n      search(searchValue) {\n        fetch(`${api_url}/3/search/movie?api_key=${api_key}&language=${language}&query=${searchValue}`)\n        .then(response => response.json())\n        .then(data => {\n            const movieList = []\n            const results = data.results\n            results.forEach((movie) => {\n          if(movie.poster_path === null) return\n          if(movie.vote_average) {\n            const movieBox = <MovieBox movie={movie} key={movie.id} />\n            movie.poster_link = `${image_url}${movie.poster_path}`\n            movie.url = `${tmdb_url}${movie.id}`\n            movieList.push(movieBox)\n          }\n            })\n            this.setState({ movieData: movieList })\n        })\n      }\n  \n      updateDiscover = (type, genre=\"\") => {\n        this.discover(type, genre[1])\n      }\n  \n      updateSearch = (event) => {\n        if(event.length === 0) return\n        this.search(event)\n    }\n  \n      render() {\n        return (\n        <div className=\"App\">\n          {this.state.movieData\n            ? <div>\n              <Navbar updateSearch={this.updateSearch} updateDiscover={this.updateDiscover} />\n              <GenresBar genres={genres} updateDiscover={this.updateDiscover} />\n              <FeaturedMovie movie={this.state.featuredMovieData} />\n              <MovieMain movies={this.state.movieData} />\n              <Footer />\n            </div>\n            : null\n          }\n        </div>\n        )\n      }\n  }\n  \n  const FeaturedMovie = (props) => (\n      <div className='featured_movie_container'>\n          <FeaturedMoviePoster poster={props.movie.poster_path} />\n          <FeaturedMovieInfo movie={props.movie}/>\n      </div>\n  )\n  \n  const FeaturedMovieInfo = (props) => {\n      const trailer_path = `https://www.youtube.com/embed/${props.movie.videos.results[0].key}`\n      return (\n          <div className='featured_movie_info'>\n              <h1 className=\"movie_title\">{props.movie.title ? props.movie.title.toUpperCase() : props.movie.name.toUpperCase()}</h1>\n              <h2 className=\"movie_tagline\">{props.movie.tagline}</h2>\n              <p className=\"movie_overview\">{props.movie.overview}</p>\n              <FeaturedMovieRating movie_average={props.movie.vote_average} />\n              <FeaturedMovieTrailer trailer_path={trailer_path} />\n          </div>\n      )\n  }\n  \n  const FeaturedMoviePoster = (props) => {\n      const poster_path = `https://image.tmdb.org/t/p/w500/${props.poster}`\n      const style = {\n          backgroundImage: \"url(\"+poster_path+\")\"\n      }\n  \n      return(\n          <div className='featured_movie_poster' style={style}>\n          </div>\n      )\n  }\n  \n  const FeaturedMovieRating = (props) => {\n      const stars = []\n  \n      for(let i = 0; i < 10; i++) {\n          if(i < props.movie_average && (props.movie_average - i) < 1 && (props.movie_average - i) > 0) {\n              stars.push(<i className=\"star fas fa-star-half-alt\" key={`star${i}`}></i>)\n          } else if(i < props.movie_average && (props.movie_average - i) > 0) {\n              stars.push(<i className=\"star fas fa-star\" key={`star${i}`}></i>)\n          } else {\n              stars.push(<i className=\"star far fa-star\" key={`star${i}`}></i>)\n          }\n      }\n  \n      return (\n          <div className=\"featured_movie_rating\">\n              <p className=\"stars\">{stars}\n                  <span className=\"movie_average\">{props.movie_average}</span>\n              </p>\n          </div>\n      )\n  }\n  \n  const FeaturedMovieTrailer = (props) => (\n      <iframe title=\"Trailer\" width=\"100%\" height=\"100%\" src={props.trailer_path} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n  )\n  \n  const Footer = (props) => {\n      return(\n          <div className=\"footer\">\n              <div className=\"footer-icons\">\n                  <a href=\"http://www.github.com/mikesuchor\"><i className=\"fab fa-github-square\"></i></a>\n                  <a href=\"http://www.linkedin.com/in/michael-suchorolski\"><i className=\"fab fa-linkedin\"></i></a>\n                  <a href=\"mailto:mikesuchor@gmail.com\"><i className=\"fas fa-envelope-square\"></i></a>\n                  <TMDBLogo />\n              </div>\n              <p>Designed and created by Michael Suchorolski &copy; 2019</p>\n          </div>\n      )\n  }\n  \n  const TMDBLogo = () => (\n    <a href=\"https://www.themoviedb.org/\"><img className=\"tmdb-logo\" src=\"https://previews.dropbox.com/p/thumb/AAZ09JA0zXmOcCBoeK-_BYH3FtZA3cMgKcbg01VPkylJD91dboZ_esG7E6rMjS_dhL2q2yrIFpyb39NRTNtIzl88ac3M3HEUXN7s8bsiwW4UQ7BcSVUPueAxKIM2ybdOQJ_ZqA0ccs0EWW4f1YCR8YMepR15_e4ijR_u3RNy8ufq_gV3c0TpEH7iVgUMM-ruthAgJtTLibHkjUpyme2JN5pBTI-RZO1rDLmCau6BAhpPN2reifxVGFHfdN37o2KVk7xSJJCxhO7UlLokb622IoAcrSoLxT4Ijat6p_IU0mDpmxXlmRM5-vrScg4L6hyCTqLhXa3Bb1EnhwU89Haj_3ZteHYRypPQunzmP_ad96ooAg/p.png?size_mode=5\" alt=\"tmdb logo\"></img></a>\n  )\n  \n  const MovieBox = (props) => {\n  \n    const moveToFeatured = (hello) => {\n      console.log(hello)\n    }\n    \n    return (\n      <div className=\"movie_box\">\n        <img className=\"movie_poster\" src={props.movie.poster_link} alt=\"movie poster\" onClick={() => moveToFeatured(props)} />\n        <p className=\"movie_title\">{props.movie.title ? props.movie.title : props.movie.name}</p>\n        <p className=\"movie_vote_average\"><i className=\"star_icon fas fa-star\"></i>{props.movie.vote_average}</p>\n      </div>\n    )\n  }\n  \n  const MovieBoxContainer = (props) => (\n    <div className=\"movie_box_container\">\n      {props.movies}\n    </div>\n  )\n  \n  const MovieMain = (props) => (\n      <div className=\"movie_main\">\n          <h2>TRENDING MOVIES</h2>\n          <MovieBoxContainer movies={props.movies} />\n      </div>\n  )\n  \n  const GenreButton = (props) => (\n      <div className=\"genre_button\" onClick={() => props.updateDiscover(\"movie\", props.genre)}>\n          {props.genre[0]}\n      </div>\n  )\n  \n  const GenresBar = (props) => {\n    const genresArr = []\n    for (var i = 0; i < Object.keys(props.genres).length; i++) {\n      genresArr.push(<GenreButton genre={Object.entries(props.genres)[i]} key={`Button+${i}`} updateDiscover={props.updateDiscover} />)\n    }\n  \n    return(\n      <div className=\"genres_bar\">\n        {genresArr}\n      </div>\n    )\n  }\n  \n  const Navbar = (props) => (\n    <nav className=\"navbar\">\n      <TVMovieToggle updateDiscover={props.updateDiscover} />\n      <Search updateSearch={props.updateSearch} />\n    </nav>\n  )\n  \n  const Search = (props) => {\n  \n    const scrollToMovies = () => {\n      var element = document.querySelector(\".movie_main\");\n      var headerOffset = 70;\n      var elementPosition = element.offsetTop;\n      var offsetPosition = elementPosition - headerOffset;\n      document.documentElement.scrollTop = offsetPosition;\n      document.body.scrollTop = offsetPosition; // For Safari\n    }\n  \n    return (\n      <div className=\"search-field-container\">\n        <input className=\"search-field\" type=\"search\" name=\"search\" placeholder=\"Search...\" onFocus={() => scrollToMovies()} onChange={(event) => props.updateSearch(event.target.value)} />\n      </div>\n    )\n  }\n  \n  class TVMovieToggle extends React.Component {\n      state = {\n          toggle: false\n      }\n      \n      slideToggle = () => {\n          this.setState({toggle: !this.state.toggle}, () =>\n              this.props.updateDiscover(this.state.toggle ? \"tv\" : \"movie\")\n          )\n      }\n      \n      render() {\n          const toggle = this.state.toggle\n          \n          return(\n              <div className=\"toggle-container\">\n                  <p>Movies</p>\n                  <div className=\"toggle\" onClick={() => this.slideToggle()} >\n                      <div className={\"toggle-button \" + (toggle ? 'movie' : 'tv')}>\n                      </div>\n                  </div>\n                  <p>TV</p>\n              </div>\n          )\n      }\n  }\n  \n}\n\nexport default Movie;\n"]},"metadata":{},"sourceType":"module"}